<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.franchise.Franchise.mapper.OrderMapper">
    <select id="selectOrderTotalSaleList" parameterType="map" resultType="com.franchise.Franchise.dto.OrderTotalSale">
        SELECT o.storeId,
            COALESCE(SUM(o.totalPrice), 0) AS totalSales,
            COALESCE(SUM(o.totalDiscount), 0) AS totalDiscounts,
            count(case when o.eatWhere = 'HALL' then 1 end) as hallCount,
            count(case when o.eatWhere = 'DELIVERY' then 1 end) as deliveryCount,
            count(case when o.eatWhere = 'TAKEOUT' then 1 end) as takeoutCount,
            count(case when o.payment = 'CREDITCARD' then 1 end) as creditCardCount,
            count(case when o.payment = 'CASH' then 1 end) as cashCount
        FROM orders AS o
        WHERE o.updatedAt BETWEEN date(#{startDate}) and DATE_ADD(date(#{endDate}), INTERVAL 1 DAY)
        GROUP BY o.storeId;
    </select>
    <select id="selectOrderTotalSaleListByStoreId" parameterType="map" resultType="com.franchise.Franchise.dto.OrderTotalSale">
        SELECT o.storeId,
            COALESCE(SUM(o.totalPrice), 0) AS totalSales,
            COALESCE(SUM(o.totalDiscount), 0) AS totalDiscounts,
            count(case when o.eatWhere = 'HALL' then 1 end) as hallCount,
            count(case when o.eatWhere = 'DELIVERY' then 1 end) as deliveryCount,
            count(case when o.eatWhere = 'TAKEOUT' then 1 end) as takeoutCount,
            count(case when o.payment = 'CREDITCARD' then 1 end) as creditCardCount,
            count(case when o.payment = 'CASH' then 1 end) as cashCount
        FROM orders AS o
        WHERE o.updatedAt BETWEEN date(#{startDate}) and DATE_ADD(date(#{endDate}), INTERVAL 1 DAY)
        AND o.storeId = #{storeId}
        GROUP BY o.storeId;
    </select>
    <select id="selectOrderTotalSaleListPerDay" parameterType="map" resultType="com.franchise.Franchise.dto.OrderTotalSalePerDay">
        SELECT o.storeId,
            COALESCE(SUM(o.totalPrice), 0) AS totalSales,
            COALESCE(SUM(o.totalDiscount), 0) AS totalDiscounts,
            count(case when o.eatWhere = 'HALL' then 1 end) as hallCount,
            count(case when o.eatWhere = 'DELIVERY' then 1 end) as deliveryCount,
            count(case when o.eatWhere = 'TAKEOUT' then 1 end) as takeoutCount,
            count(case when o.payment = 'CREDITCARD' then 1 end) as creditCardCount,
            count(case when o.payment = 'CASH' then 1 end) as cashCount,
            DATE_FORMAT(o.updatedAt, "%Y-%m-%d") AS orderDate
        FROM orders AS o
        WHERE o.updatedAt BETWEEN date(#{startDate}) and DATE_ADD(date(#{endDate}), INTERVAL 1 DAY)
        GROUP BY DATE_FORMAT(o.updatedAt, "%Y-%m-%d"), o.storeId;
    </select>
    <select id="selectOrderTotalSaleListPerDayByStoreId" parameterType="map" resultType="com.franchise.Franchise.dto.OrderTotalSalePerDay">
        SELECT o.storeId,
            COALESCE(SUM(o.totalPrice), 0) AS totalSales,
            COALESCE(SUM(o.totalDiscount), 0) AS totalDiscounts,
            count(case when o.eatWhere = 'HALL' then 1 end) as hallCount,
            count(case when o.eatWhere = 'DELIVERY' then 1 end) as deliveryCount,
            count(case when o.eatWhere = 'TAKEOUT' then 1 end) as takeoutCount,
            count(case when o.payment = 'CREDITCARD' then 1 end) as creditCardCount,
            count(case when o.payment = 'CASH' then 1 end) as cashCount,
            DATE_FORMAT(o.updatedAt, "%Y-%m-%d") AS orderDate
        FROM orders AS o
        WHERE o.updatedAt BETWEEN date(#{startDate}) and DATE_ADD(date(#{endDate}), INTERVAL 1 DAY)
        AND o.storeId = #{storeId}
        GROUP BY DATE_FORMAT(o.updatedAt, "%Y-%m-%d"), o.storeId;
    </select>
</mapper>